#pragma checksum "D:\netcorespace\YuebonFramework.NetCore\src\Yuebon.WebApp\Areas\Security\Views\Items\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9fa7e144dddcd45750eb36c33890939a58d5065a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Security_Views_Items_Index), @"mvc.1.0.view", @"/Areas/Security/Views/Items/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/Security/Views/Items/Index.cshtml", typeof(AspNetCore.Areas_Security_Views_Items_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9fa7e144dddcd45750eb36c33890939a58d5065a", @"/Areas/Security/Views/Items/Index.cshtml")]
    public class Areas_Security_Views_Items_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap-treeview/css/bootstrap-treeview.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap-treeview/js/bootstrap-treeview.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\netcorespace\YuebonFramework.NetCore\src\Yuebon.WebApp\Areas\Security\Views\Items\Index.cshtml"
  
    ViewData["Title"] = "数据字典-系统管理";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.CurrentMenuP = "Security";
    ViewBag.CurrentMenu = "Item/List";

#line default
#line hidden
            BeginContext(174, 306, true);
            WriteLiteral(@"<div class=""container-fluid"">
    <div class=""row"">
        <div class=""col-md-2"">
            <div class=""card card-primary card-outline"">
                <div class=""card-header"">字典分类</div>
                <div class=""card-body"">
                    <div id=""toolbarcategory"" class=""btn-group"">

");
            EndContext();
#line 16 "D:\netcorespace\YuebonFramework.NetCore\src\Yuebon.WebApp\Areas\Security\Views\Items\Index.cshtml"
                         if (@ViewBag.AuthorizeKey.CanInsert)
                        {

#line default
#line hidden
            BeginContext(570, 297, true);
            WriteLiteral(@"                            <button id=""btn_add"" type=""button"" class=""btn btn-primary btn-sm"" data-toggle=""modal"" onclick=""ShowEditOrViewCategoryDialog()"" data-whatever=""新增"">
                                <i class=""fas fa-plus"" aria-hidden=""true""></i>新增
                            </button>
");
            EndContext();
#line 21 "D:\netcorespace\YuebonFramework.NetCore\src\Yuebon.WebApp\Areas\Security\Views\Items\Index.cshtml"
                        }

#line default
#line hidden
            BeginContext(894, 24, true);
            WriteLiteral("                        ");
            EndContext();
#line 22 "D:\netcorespace\YuebonFramework.NetCore\src\Yuebon.WebApp\Areas\Security\Views\Items\Index.cshtml"
                         if (@ViewBag.AuthorizeKey.CanUpdate)
                        {

#line default
#line hidden
            BeginContext(984, 306, true);
            WriteLiteral(@"                            <button id=""btn_edit"" type=""button"" class=""btn btn-secondary btn-sm"" data-toggle=""modal"" onclick=""ShowEditOrViewCategoryDialog('edit')"" data-whatever=""修改"">
                                <i class=""fas fa-edit"" aria-hidden=""true""></i>修改
                            </button>
");
            EndContext();
#line 27 "D:\netcorespace\YuebonFramework.NetCore\src\Yuebon.WebApp\Areas\Security\Views\Items\Index.cshtml"
                        }

#line default
#line hidden
            BeginContext(1317, 24, true);
            WriteLiteral("                        ");
            EndContext();
#line 28 "D:\netcorespace\YuebonFramework.NetCore\src\Yuebon.WebApp\Areas\Security\Views\Items\Index.cshtml"
                         if (@ViewBag.AuthorizeKey.CanDelete)
                        {

#line default
#line hidden
            BeginContext(1407, 256, true);
            WriteLiteral(@"                            <button id=""btn_delete"" type=""button"" class=""btn btn-danger btn-sm"" onclick=""DeleteCategoryByIds()"">
                                <i class=""fas fa-trash-alt"" aria-hidden=""true""></i>删除
                            </button>
");
            EndContext();
#line 33 "D:\netcorespace\YuebonFramework.NetCore\src\Yuebon.WebApp\Areas\Security\Views\Items\Index.cshtml"
                        }

#line default
#line hidden
            BeginContext(1690, 447, true);
            WriteLiteral(@"                    </div>
                    <div id=""tbTreeGrid""></div>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <div class=""col-md-10"">
            <div class=""card card-primary card-outline"">
                <div class=""card-header"">数据列表</div>
                <div class=""card-body"">
                    <div id=""toolbar"" class=""btn-group"">
");
            EndContext();
#line 46 "D:\netcorespace\YuebonFramework.NetCore\src\Yuebon.WebApp\Areas\Security\Views\Items\Index.cshtml"
                         if (@ViewBag.AuthorizeKey.CanInsert)
                        {

#line default
#line hidden
            BeginContext(2227, 282, true);
            WriteLiteral(@"                            <button id=""btn_add"" type=""button"" class=""btn btn-primary"" data-toggle=""modal"" onclick=""ShowEditOrViewDialog()"" data-whatever=""新增"">
                                <i class=""fas fa-plus"" aria-hidden=""true""></i>新增
                            </button>
");
            EndContext();
#line 51 "D:\netcorespace\YuebonFramework.NetCore\src\Yuebon.WebApp\Areas\Security\Views\Items\Index.cshtml"
                        }

#line default
#line hidden
            BeginContext(2536, 24, true);
            WriteLiteral("                        ");
            EndContext();
#line 52 "D:\netcorespace\YuebonFramework.NetCore\src\Yuebon.WebApp\Areas\Security\Views\Items\Index.cshtml"
                         if (@ViewBag.AuthorizeKey.CanUpdate)
                        {

#line default
#line hidden
            BeginContext(2626, 291, true);
            WriteLiteral(@"                            <button id=""btn_edit"" type=""button"" class=""btn btn-secondary"" data-toggle=""modal"" onclick=""ShowEditOrViewDialog('edit')"" data-whatever=""修改"">
                                <i class=""fas fa-edit"" aria-hidden=""true""></i>修改
                            </button>
");
            EndContext();
#line 57 "D:\netcorespace\YuebonFramework.NetCore\src\Yuebon.WebApp\Areas\Security\Views\Items\Index.cshtml"
                        }

#line default
#line hidden
            BeginContext(2944, 24, true);
            WriteLiteral("                        ");
            EndContext();
#line 58 "D:\netcorespace\YuebonFramework.NetCore\src\Yuebon.WebApp\Areas\Security\Views\Items\Index.cshtml"
                         if (@ViewBag.AuthorizeKey.CanDelete)
                        {

#line default
#line hidden
            BeginContext(3034, 276, true);
            WriteLiteral(@"                            <button id=""btn_delete"" type=""button"" class=""btn btn-danger"" onclick=""DeleteByIds('/Security/ItemsDetail/DeleteByIds')"">
                                <i class=""fas fa-trash-alt"" aria-hidden=""true""></i>删除
                            </button>
");
            EndContext();
#line 63 "D:\netcorespace\YuebonFramework.NetCore\src\Yuebon.WebApp\Areas\Security\Views\Items\Index.cshtml"
                        }

#line default
#line hidden
            BeginContext(3337, 24, true);
            WriteLiteral("                        ");
            EndContext();
#line 64 "D:\netcorespace\YuebonFramework.NetCore\src\Yuebon.WebApp\Areas\Security\Views\Items\Index.cshtml"
                         if (@ViewBag.AuthorizeKey.CanUpdateEnable)
                        {

#line default
#line hidden
            BeginContext(3433, 344, true);
            WriteLiteral(@"                            <button type=""button"" class=""btn btn-warning"" onclick=""EnableByIds('0','/Security/ItemsDetail')""><i class="" fa fa-stop-circle""></i>禁用</button>
                            <button type=""button"" class=""btn btn-success"" onclick=""EnableByIds('1','/Security/ItemsDetail')""><i class="" fa fa-play-circle""></i>启用</button>
");
            EndContext();
#line 68 "D:\netcorespace\YuebonFramework.NetCore\src\Yuebon.WebApp\Areas\Security\Views\Items\Index.cshtml"
                        }

#line default
#line hidden
            BeginContext(3804, 10623, true);
            WriteLiteral(@"
                    </div>
                    <table id=""tbGrid""></table>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
    </div>
</div>




<!-- 添加/编辑分类信息的弹出层 -->
<div class=""modal fade"" id=""addCategoryFormModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""addCategoryFormModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog modal-lg"" role=""document"">
        <div class=""modal-content"">
            <form class=""form-horizontal"" id=""frmSubmitCategory"" method=""post"" enctype=""multipart/form-data"">
                <div class=""modal-header bg-primary"">
                    <h5 class=""modal-title"" id=""addCategoryFormModalLabel"">新增</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                   ");
            WriteLiteral(@" <div class=""row"">
                        <div class=""col-6"">
                            <div class=""form-group"">
                                <div class=""row"">
                                    <label for=""FullName"" class=""col-form-label col-2"">名称:</label>
                                    <input type=""text"" class=""form-control col-10"" name=""FullName"" id=""FullName"" placeholder=""请输入分类名称"">
                                </div>
                            </div>
                        </div>
                        <div class=""col-6"">
                            <div class=""form-group"">
                                <div class=""row"">
                                    <label for=""EnCode"" class=""col-form-label col-2"">编码:</label>
                                    <input type=""text"" class=""form-control col-10"" name=""EnCode"" id=""EnCode"" placeholder=""请输入分类编码"">
                                </div>
                            </div>
                        </div>
                    ");
            WriteLiteral(@"</div>

                    <div class=""row"">
                        <div class=""col-6"">
                            <div class=""form-group"">
                                <div class=""row"">
                                    <label for=""ParentId"" class=""col-form-label col-2"">上级:</label>
                                    <select class=""form-control select2  col-10"" name=""ParentId"" id=""ParentId"">
                                        <option value="""">==请选择上级菜单==</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class=""col-6"">
                            <div class=""form-group"">
                                <div class=""row"">
                                    <label for=""SortCode"" class=""col-form-label col-2"">排序:</label>
                                    <input type=""text"" class=""form-control col-10"" name=""SortCode"" id=""SortCode"" placeholder=""请输");
            WriteLiteral(@"入排序号"">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class=""form-group"">
                        <div class=""row"">
                            <div class=""col-1""><label for=""recipient-name"" class=""col-form-label"">选项:</label></div>
                            <div class=""col-11"">
                                <label for=""IsMenu"">
                                    <input type=""checkbox"" class=""flat-red"" name=""IsTree"" id=""IsTree"">
                                    是否是树
                                </label>
                                <label for=""EnabledMark"">
                                    <input type=""checkbox"" class=""flat-red"" checked=""checked"" name=""EnabledMark"" id=""EnabledMark"">
                                    有效
                                </label>
                            </div>
                        </div>
                    </div>
           ");
            WriteLiteral(@"         <div class=""form-group"">
                        <label for=""Description"" class=""col-form-label"">描述:</label>
                        <textarea class=""form-control"" id=""Description"" name=""Description""></textarea>
                    </div>
                    <input type=""hidden"" id=""Id"" name=""Id"" value="""" />
                </div>
                <div class=""modal-footer"">
                    <button type=""submit"" class=""btn btn-primary btnSave"" id=""btnSaveCategoryOK""><i class=""fa fa-save""></i>保存</button>
                    <button type=""button"" class=""btn btn-danger"" data-dismiss=""modal""><i class=""fa fa-close""></i>关闭</button>
                </div>
            </form>
        </div>
    </div>
</div>


<!-- 添加/编辑信息的弹出层 -->
<div class=""modal fade"" id=""addFormModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""addFormModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog modal-lg"" role=""document"">
        <div class=""modal-content"">
            <form class=""form-horizontal"" ");
            WriteLiteral(@"id=""frmSubmit"" method=""post"" enctype=""multipart/form-data"">
                <div class=""modal-header bg-primary"">
                    <h5 class=""modal-title modal-sm"" id=""addFormModalLabel"">新增</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <div class=""row"">
                        <div class=""col-6"">
                            <div class=""form-group"">
                                <div class=""row"">
                                    <label for=""ItemName"" class=""col-form-label col-2"">名称:</label>
                                    <input type=""text"" class=""form-control col-10"" name=""ItemName"" id=""ItemName"" placeholder=""请输入名称"">
                                </div>
                            </div>
                        </div>
                        <div cl");
            WriteLiteral(@"ass=""col-6"">
                            <div class=""form-group"">
                                <div class=""row"">
                                    <label for=""ItemCode"" class=""col-form-label col-2"">值:</label>
                                    <input type=""text"" class=""form-control col-10"" name=""ItemCode"" id=""ItemCode"" placeholder=""请输入值"">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class=""row"">
                        <div class=""col-6"">
                            <div class=""form-group"">
                                <div class=""row"">
                                    <label for=""ItemId"" class=""col-form-label col-2"">分类:</label>
                                    <select class=""form-control select2  col-10"" name=""ItemId"" id=""ItemId"">
                                        <option value="""">==请选择所属分类==</option>
                                    </select>
            ");
            WriteLiteral(@"                    </div>
                            </div>
                        </div>
                        <div class=""col-6"">
                            <div class=""form-group"">
                                <div class=""row"">
                                    <label for=""ParentId"" class=""col-form-label col-2"">上级:</label>
                                    <select class=""form-control select2  col-10"" name=""ParentId"" id=""ItemsDetailParentId"">
                                        <option value="""">==请选择上级菜单==</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""row"">
                        <div class=""col-6"">
                            <div class=""form-group"">
                                <div class=""row"">
                                    <label for=""SimpleSpelling"" class=""col-form-label col-2"">简拼:</label");
            WriteLiteral(@">
                                    <input type=""text"" class=""form-control col-10"" name=""SimpleSpelling"" id=""SimpleSpelling"" placeholder=""请输入简拼"">
                                </div>
                            </div>
                        </div>
                        <div class=""col-6"">
                            <div class=""form-group"">
                                <div class=""row"">
                                    <label for=""SortCode"" class=""col-form-label col-2"">排序:</label>
                                    <input type=""text"" class=""form-control col-10"" name=""SortCode"" id=""ItemsDetailSortCode"" placeholder=""请输入排序号"">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class=""form-group"">
                        <div class=""row"">
                            <div class=""col-1""><label for=""recipient-name"" class=""col-form-label"">选项:</label></div>
                         ");
            WriteLiteral(@"   <div class=""col-11"">
                                <label for=""IsDefault"">
                                    <input type=""checkbox"" class=""flat-red"" name=""IsDefault"" id=""IsDefault"">
                                    是否默认
                                </label>
                                <label for=""EnabledMark"">
                                    <input type=""checkbox"" class=""flat-red"" checked=""checked"" name=""EnabledMark"" id=""ItemsDetailEnabledMark"">
                                    有效
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label for=""Description"" class=""col-form-label"">描述:</label>
                        <textarea class=""form-control"" id=""ItemsDetailDescription"" name=""Description""></textarea>
                    </div>
                    <input type=""hidden"" id=""Id"" name=""Id"" value="""" />
                </div>");
            WriteLiteral(@"
                <div class=""modal-footer"">
                    <button type=""submit"" class=""btn btn-primary btnSave"" id=""btnSaveOK""><i class=""fa fa-save""></i>保存</button>
                    <button type=""button"" class=""btn btn-danger"" data-dismiss=""modal""><i class=""fa fa-close""></i>关闭</button>
                </div>
            </form>
        </div>
    </div>
</div>

");
            EndContext();
            BeginContext(14427, 84, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "9fa7e144dddcd45750eb36c33890939a58d5065a23063", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14511, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(14513, 73, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9fa7e144dddcd45750eb36c33890939a58d5065a24320", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14586, 20158, true);
            WriteLiteral(@"
<!-- page script -->
<script>
    $(function () {
        //iCheck for checkbox and radio inputs
        $('input[type=""checkbox""].flat-red').iCheck({
            checkboxClass: 'icheckbox_minimal-blue',
            radioClass: 'iradio_minimal',
        })
        InitCategoryTree();
        //1.初始化Table
        var oTable = new TableInit();
        oTable.Init();

        InitDictItem();
        BindSaveCategoryEvent();
        BindSaveEvent();
    });

    //加载数据表格
    var $table = $('#tbGrid');
    var TableInit = function () {
        var oTableInit = new Object();
        
        var keywords = """";
        //初始化Table
        oTableInit.Init = function () {
            //首先取出来用户选择的数据的ID
            var rows = $(""#tbTreeGrid"").treeview('getSelected');
            //首先取出来值判断用户只能选择一个
            if (rows.length == 0) {
                toastr.warning(""请选择分类"");
                return;
            }
            $table.bootstrapTable({
                url: '/Security/ItemsDet");
            WriteLiteral(@"ail/FindWithPager',         //请求后台的URL（*）
                method: 'get',                      //请求方式（*）
                toolbar: '#toolbar',                //工具按钮用哪个容器
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: true,                     //是否启用排序
                sortOrder: ""asc"",                   //排序方式
                queryParams: oTableInit.queryParams,//传递参数（*）
                sidePagination: ""server"",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                       //初始化加载第一页，默认第一页
                pageSize: 25,                       //每页的记录行数（*）
                pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                search: true,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                strictSearch: true,
                showColum");
            WriteLiteral(@"ns: true,                  //是否显示所有的列
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                //height: $(window).height(),                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                uniqueId: ""ID"",                     //每一行的唯一标识，一般为主键列
                showToggle: true,                    //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //是否显示详细视图
                detailView: false,                   //是否显示父子表
                searchOnEnterKey: true,
                searchText: keywords,
                columns: [
                    {
                        checkbox: true
                    }, {
                        field: 'ItemName',
                        title: '名称',
                        sortable: true,
                        searchable: true,
                    }, {
                       ");
            WriteLiteral(@" field: 'ItemCode',
                        title: '值',
                        sortable: true,
                        searchable: true,
                    },{
                        field: 'IsDefault',
                        title: '默认',
                        sortable: true,
                        align: ""center"",
                        formatter: function (value, row, index) {
                            return value ? '<i class=\""fas fa-toggle-on\"" style=\""color:#28a745\""></i>' : ""<i class=\""fas fa-toggle-off\""></i>""
                        }
                    }, {
                        field: 'EnabledMark',
                        title: '有效',
                        sortable: true,
                        align: ""center"",
                        formatter: function (value, row, index) {
                            return value ? '<i class=\""fas fa-toggle-on\"" style=\""color:#28a745\""></i>' : ""<i class=\""fas fa-toggle-off\""></i>""
                        }
                   ");
            WriteLiteral(@" }, {
                        field: 'ParentName',
                        title: '父级'
                    }, {
                        field: 'SortCode',
                        title: '排序',
                        sortable: true,
                        searchable: true,
                    }, {
                        field: 'Description',
                        title: '备注'
                    }
                ],
                onSearch: function (text) {
                    keywords = text;
                    return true;
                },
            });
        };

        //得到查询的参数
        oTableInit.queryParams = function (params) {
            var ID = $(""#tbTreeGrid"").treeview('getSelected')[0].tags;  //获取到了用用户选择的ID
            var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                limit: params.limit,   //页面大小
                offset: params.offset,  //页码
                order: params.order,
                sort: params.sort,
                itemid: ID");
            WriteLiteral(@",
                search: $(""input[ name='search_text' ] "").val(), //定义传输的搜索参数
            };
            return temp;
        };
        return oTableInit;
    };


    //初始化数据字典
    function InitDictItem() {
        $(""#ParentId"").bindSelect({
            url: ""/Security/Items/FindTreeSelectJson"",
        });

    }
    //初始化字典数据
    function InitItemsDetail() {
        $(""#ItemsDetailParentId"").bindSelect({
            url: ""/Security/ItemsDetail/FindTreeSelectJson"",
        });
        $(""#ItemId"").bindSelect({
            url: ""/Security/Items/FindTreeSelectJson"",
        });
    }
    //加载分类树
    function InitCategoryTree() {
        var treeUrl = ""/Security/Items/GetAllTreeViewJson"";
        $.ajax({
            url: treeUrl,
            data: """",
            dataType: 'json',//服务器返回json格式数据
            type: 'get',//HTTP请求类型
            timeout: 100000,//超时时间设置为10秒；
            success: function (data) {
                $('#tbTreeGrid').treeview({
                  ");
            WriteLiteral(@"  data: data,
                    levels: 5,
                    multiSelect: false,
                    showIcon: false,
                    showCheckbox: false,
                    showTags: false,
                    onNodeSelected: function (event, node) { //选择节点
                        $table.bootstrapTable('refresh');
                    }
                });
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                toastr.warning(""操作失败："" + errorThrown);
            }
        });
    }
    //新增、修改或查看明细信息（绑定显示数据）
    function ShowEditOrViewCategoryDialog(view) {
        if (view != null) {
            //首先取出来用户选择的数据的ID
            var rows = $(""#tbTreeGrid"").treeview('getSelected');
            //首先取出来值判断用户只能选择一个
            if (rows.length == 0) {
                toastr.warning(""请选择一条记录"");
                return;
            }else if (rows.length > 1) {
                toastr.warning(""每次只能修改/查看一条记录，你已经选择了<font color='red'  size='6'>""");
            WriteLiteral(@" + rows.length + ""</font>条"");
                return;
            }
        }
        if (view == null) {
            //处理修改的信息
            $('#addCategoryFormModal').modal('show');  //手动显示
            $('#addCategoryFormModalLabel').find('.modal-title').text(""新增"");
            $(""#Id"").val("""");
        } else if (view == ""edit"") {
            //处理修改的信息
            $('#addCategoryFormModal').modal('show');  //手动显示
            $('#addCategoryFormModalLabel').find('.modal-title').text(""编辑"");
            //绑定修改详细信息的方法
            BindEditCategoryInfo();
        }
    }

    //绑定编辑详细信息的方法
    function BindEditCategoryInfo() {
        //首先用户发送一个异步请求去后台实现方法
        var rows = $(""#tbTreeGrid"").treeview('getSelected');
        var ID = $(""#tbTreeGrid"").treeview('getSelected')[0].tags;  //获取到了用用户选择的ID
        $.getJSON(""/Security/Items/GetById?r="" + Math.random() + ""&id="" + ID, function (info) {
            //赋值有几种方式：.datebox('setValue', info.Birthday);.combobox('setValue', info.Status);.val(in");
            WriteLiteral(@"fo.Name);
            $(""#Id"").val(info.ResData.Id);
            $(""#frmSubmitCategory"").formSerialize(info.ResData);
        });
    }
    //绑定保存按钮的事件
    function BindSaveCategoryEvent() {
        $(""#btnSaveCategoryOK"").click(function () {
            $(""#frmSubmitCategory"").validate({
                rules: {
                    FullName: {
                        required: true,
                        minlength: 1
                    }
                },
                messages: {
                    FullName: {
                        required: ""请输入分类名称"",
                        minlength: ""分类名称至少1个字符""
                    }
                },
                errorClass: 'help-block help-block-error',
                focusInvalid: true,
                //unhighlight: function (element, errorClass, validClass) { //验证通过
                //    $(element).tooltip('destroy').removeClass(errorClass);
                //},
                highlight: function (element) {//验证未通过
       ");
            WriteLiteral(@"             $(element).closest('.form-group').addClass('has-error');
                },
                success: function (label, element) {
                    $(element).closest('.form-group').removeClass('has-error');
                    //label.remove();
                    $(element).attr(""title"", """").tooltip(""hide"");
                    //alert(element);
                },
                errorPlacement: function (error, element) {
                    //element.parent('div').append(error);
                    if ($(element).next(""div"").hasClass(""tooltip"")) {
                        $(element).attr(""data-original-title"", $(error).text()).tooltip(""show"");
                    } else {
                        $(element).attr(""title"", $(error).text()).tooltip(""show"");
                    }
                },
                submitHandler: function (form) {
                    var postData = {
                        ""Id"": $(""#Id"").val(),
                        ""FullName"": $(""#FullName"").");
            WriteLiteral(@"val(),
                        ""EnCode"": $(""#EnCode"").val(),
                        ""ParentId"": $(""#ParentId"").val(),
                        ""SortCode"": $(""#SortCode"").val(),
                        ""IsTree"": $(""#IsTree"").is(':checked'),
                        ""EnabledMark"": $(""#EnabledMark"").is(':checked'),
                        ""Description"": $(""#Description"").val()
                    };
                    var keyValue = $(""#Id"").val();
                    var reqUrl = ""/Security/Items/Insert"";
                    if (keyValue != """" && keyValue != null && keyValue != ""null"") {
                        reqUrl = ""/Security/Items/Update?id="" + keyValue;
                    }
                    $.ajax({
                        url: reqUrl,
                        data: postData,
                        dataType: 'json',//服务器返回json格式数据
                        type: 'post',//HTTP请求类型
                        timeout: 100000,//超时时间设置为10秒；
                        success: function (data) {");
            WriteLiteral(@"
                            //服务器返回响应，根据响应结果，分析是否登录成功；
                            if (data.Success) {
                                $('#addCategoryFormModal').modal('hide');  //手动关闭
                                $(""#frmSubmitCategory"")[0].reset();
                                toastr.success(""操作成功"");
                                setTimeout(function () {
                                    InitCategoryTree();
                                }, 1500);
                            } else {
                                toastr.warning(""操作失败："" + data.ErrMsg);
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            toastr.warning(""操作失败："" + errorThrown);
                        }
                    });
                }
            });
        });
    }

    function DeleteCategoryByIds() {
        //得到用户选择的数据的ID
        var ID = $(""#tbTreeGrid"").treeview('getSelected')");
            WriteLiteral(@"[0].tags;  //获取到了用用户选择的ID
        if (ID.length >= 1) {
            var postData = { ids: ID };
            swal({
                title: ""操作提示"",
                text: ""您确定删除选定的记录吗？"",
                icon: ""warning"",
                closeOnClickOutside: false,
                buttons: {
                    cancel: {
                        text: ""取消"",
                        visible: true,
                        closeModal: true,
                    },
                    confirm: {
                        text: ""是的，执行删除！"",
                        value: ""ok"",
                        className: ""swal-button-confirm""
                    },
                }
            }).then(function (value) {
                if (value == ""ok"") {
                    $.ajax({
                        url: '/Security/Items/DeleteByIds',
                        data: postData,
                        dataType: 'json',//服务器返回json格式数据
                        type: 'post',//HTTP请求类型
                     ");
            WriteLiteral(@"   timeout: 100000,//超时时间设置为10秒；
                        success: function (data) {
                            //服务器返回响应，根据响应结果，分析是否登录成功；
                            if (data.Success) {
                                toastr.success(""删除成功"");
                                setTimeout(function () {
                                    $(""#tbTreeGrid"").treeview('refresh');
                                }, 1000);
                            } else {
                                toastr.warning(""操作失败："" + data.ErrMsg);
                            }
                        },
                        error: function (data) {
                            toastr.warning(""删除异常,请重新试试"");
                        }
                    });
                }
            });
        } else {
            toastr.warning(""请选择你要删除的数据"");
        }
    }
    //新增、修改或查看明细信息（绑定显示数据）
    function ShowEditOrViewDialog(view) {
        if (view != null) {
            //首先取出来用户选择的数据的ID
            var rows = $");
            WriteLiteral(@"table.bootstrapTable('getSelections');
            //首先取出来值判断用户只能选择一个
            if (rows.length == 0) {
                toastr.warning(""请选择一条记录"");
                return;
            }
            else if (rows.length > 1) {
                toastr.warning(""每次只能修改/查看一条记录，你已经选择了<font color='red'  size='6'>"" + rows.length + ""</font>条"");
                return;
            }
        }
        if (view == null) {
            //处理修改的信息
            $('#addFormModal').modal('show');  //手动显示
            $('#addFormModal').find('.modal-title').text(""新增"");
            $(""#Id"").val("""");
            InitItemsDetail();
        } else if (view == ""edit"") {
            //处理修改的信息
            $('#addFormModal').modal('show');  //手动显示
            $('#addFormModal').find('.modal-title').text(""编辑"");
            InitItemsDetail();
            //绑定修改详细信息的方法
            BindEditInfo();
        }

    }

    //绑定编辑详细信息的方法
    function BindEditInfo() {
        //首先用户发送一个异步请求去后台实现方法
        var ID = $ta");
            WriteLiteral(@"ble.bootstrapTable('getSelections')[0].Id;  //获取到了用用户选择的ID
        $.getJSON(""/Security/ItemsDetail/GetById?r="" + Math.random() + ""&id="" + ID, function (info) {
            //赋值有几种方式：.datebox('setValue', info.Birthday);.combobox('setValue', info.Status);.val(info.Name);
            $(""#Id"").val(info.ResData.Id);
            $(""#frmSubmit"").formSerialize(info.ResData);
            $(""#ItemsDetailParentId"").val(info.ResData.ParentId);
            $(""#ItemsDetailSortCode"").val(info.ResData.SortCode);
            $(""#ItemsDetailEnabledMark"").val(info.ResData.EnabledMark);
            $(""#ItemsDetailDescription"").val(info.ResData.Description);
        });
    }
    //绑定保存按钮的事件
    function BindSaveEvent() {
        $(""#btnSaveOK"").click(function () {
            $(""#frmSubmit"").validate({
                rules: {
                    ItemName: {
                        required: true,
                    },
                    ItemId: {
                        required: true
                   ");
            WriteLiteral(@" }
                },
                messages: {
                    ItemName: {
                        required: ""请输入名称""
                    },
                    ItemId: {
                        required: ""请选择所属分类""
                    }
                },
                errorClass: 'help-block help-block-error',
                focusInvalid: true,
                //unhighlight: function (element, errorClass, validClass) { //验证通过
                //    $(element).tooltip('destroy').removeClass(errorClass);
                //},
                highlight: function (element) {//验证未通过
                    $(element).closest('.form-group').addClass('has-error');
                },
                success: function (label, element) {
                    $(element).closest('.form-group').removeClass('has-error');
                    //label.remove();
                    $(element).attr(""title"", """").tooltip(""hide"");
                    //alert(element);
                },
                e");
            WriteLiteral(@"rrorPlacement: function (error, element) {
                    //element.parent('div').append(error);
                    if ($(element).next(""div"").hasClass(""tooltip"")) {
                        $(element).attr(""data-original-title"", $(error).text()).tooltip(""show"");
                    } else {
                        $(element).attr(""title"", $(error).text()).tooltip(""show"");
                    }
                },
                submitHandler: function (form) {
                    var postData = {
                        ""Id"": $(""#Id"").val(),
                        ""ItemName"": $(""#ItemName"").val(),
                        ""ItemCode"": $(""#ItemCode"").val(),
                        ""ParentId"": $(""#ItemsDetailParentId"").val(),
                        ""ItemId"": $(""#ItemId"").val(),
                        ""SimpleSpelling"": $(""#SimpleSpelling"").val(),
                        ""SortCode"": $(""#ItemsDetailSortCode"").val(),
                        ""IsDefault"": $(""#IsDefault"").is(':checked'),
     ");
            WriteLiteral(@"                   ""EnabledMark"": $(""#ItemsDetailEnabledMark"").is(':checked'),
                        ""Description"": $(""#ItemsDetailDescription"").val()
                    };
                    var keyValue = $(""#Id"").val();
                    var reqUrl = ""/Security/ItemsDetail/Insert"";
                    if (keyValue != """" && keyValue != null && keyValue != ""null"") {
                        reqUrl = ""/Security/ItemsDetail/Update?id="" + keyValue;
                    }
                    $.ajax({
                        url: reqUrl,
                        data: postData,
                        dataType: 'json',//服务器返回json格式数据
                        type: 'post',//HTTP请求类型
                        timeout: 100000,//超时时间设置为10秒；
                        success: function (data) {
                            //服务器返回响应，根据响应结果，分析是否登录成功；
                            if (data.Success) {
                                $('#addFormModal').modal('hide');  //手动关闭
                                $(""");
            WriteLiteral(@"#frmSubmit"")[0].reset();
                                toastr.success(""操作成功"");
                                setTimeout(function () {
                                    $table.bootstrapTable('refresh');
                                }, 1500);
                            } else {
                                toastr.warning(""操作失败："" + data.ErrMsg);
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            toastr.warning(""操作失败："" + errorThrown);
                        }
                    });
                }
            });
        });
    }
    

</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
