#pragma checksum "D:\netcorespace\YueGroup\权限管理\Yuebon.Manager\Yuebon.WebApp\Areas\Tools\Views\DbTools\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "10513315ebe0c3aa9044512f3bfe84d4cb8e24b6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Tools_Views_DbTools_Index), @"mvc.1.0.view", @"/Areas/Tools/Views/DbTools/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"10513315ebe0c3aa9044512f3bfe84d4cb8e24b6", @"/Areas/Tools/Views/DbTools/Index.cshtml")]
    public class Areas_Tools_Views_DbTools_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\netcorespace\YueGroup\权限管理\Yuebon.Manager\Yuebon.WebApp\Areas\Tools\Views\DbTools\Index.cshtml"
  
    Layout = "~/Views/Shared/_Layout.cshtml";

    ViewBag.CurrentMenuP = "Tools";
    ViewBag.CurrentMenu = "DbTools";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
    <div class=""container-fluid"">
        <div class=""row"">
            <!-- left column -->
            <div class=""col-md-6"">
                <!-- general form elements -->
                <div class=""card card-primary"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">数据库连接加密或解密</h3>
                    </div>
                    <!-- /.card-header -->
                    <!-- form start -->
                    <form role=""form"">
                        <div class=""card-body"">
                            <div class=""form-group"">
                                <label for=""DbAddress"">数据库地址</label>
                                <input type=""text"" class=""form-control"" id=""DbAddress"" placeholder=""数据库地址"">
                            </div>
                            <div class=""form-group"">
                                <label for=""DbName"">数据库名称</label>
                                <input type=""text"" class=""form-control"" id=""DbName"" placeh");
            WriteLiteral(@"older=""数据库名称"">
                            </div>
                            <div class=""form-group"">
                                <label for=""DbUserName"">访问用户名</label>
                                <input type=""text"" class=""form-control"" id=""DbUserName"" placeholder=""访问用户名"">
                            </div>
                            <div class=""form-group"">
                                <label for=""DbPassword"">访问密码</label>
                                <input type=""text"" class=""form-control"" id=""DbPassword"" placeholder=""数据库访问密码"">
                            </div>
                            <div class=""form-group"">
                                <label for=""DbType"">数据库类型</label>
                                <select class=""form-control select2 required"" name=""DbType"" style=""width: 100%"" id=""DbType"">
                                    <option");
            BeginWriteAttribute("value", " value=\"", 2042, "\"", 2050, 0);
            EndWriteAttribute();
            WriteLiteral(@">==请选择==</option>
                                </select>
                            </div>
                        </div>
                        <!-- /.card-body -->
                        <div class=""card-footer"">
                            <button type=""button"" class=""btn btn-primary"" onclick=""ConnStrEncrypt()"">生成连接字符串</button>
                        </div>
                    </form>
                </div>
                <!-- /.card -->
            </div>
            <!--/.col (left) -->
            <!-- right column -->
            <div class=""col-md-6"">
                <!-- general form elements -->
                <div class=""card card-primary"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">加密或解密结果</h3>
                    </div>
                    <!-- /.card-header -->
                    <!-- form start -->
                    <form role=""form"">
                        <div class=""card-body"">
                            ");
            WriteLiteral(@"<div class=""form-group"">
                                <label>数据库连接字符串</label>
                                <textarea class=""form-control"" rows=""3"" id=""ConnStr"" placeholder="" Server={0};Database={1};User id={2}; password={3};MultipleActiveResultSets=True;""></textarea>
                            </div>
                            <div class=""form-group"">
                                <label>加密数据库连接字符串</label>
                                <textarea class=""form-control"" rows=""3"" id=""EncryptConnStr"" placeholder="" ...""></textarea>
                            </div>
                        </div>
                        <!-- /.card-body -->
                        <div class=""card-footer"">
                            <button type=""button"" class=""btn btn-danger"" onclick=""ConnStrDecrypt()"">解密连接字符串</button>
                        </div>
                    </form>
                </div>
                <!-- /.card -->
            </div>
    </div>
</div>
<script type=""text/javascript"">
");
            WriteLiteral(@"    $(document).ready(function () {
        InitDictItem();
    });
    //初始化数据字典
    function InitDictItem() {
        BindDictItem(""DbType"", ""数据库类型"");
    }
    function ConnStrEncrypt() {
        var postData = {
            DbAddress: $(""#DbAddress"").val(),
            DbName: $(""#DbName"").val(),
            DbUserName: $(""#DbUserName"").val(),
            DbPassword: $(""#DbPassword"").val(),
            DbType: $(""#DbType"").val()
        }

        $.ajax({
            url: '/Tools/DbTools/ConnStrEncrypt',
            data: postData,
            dataType: 'json',//服务器返回json格式数据
            type: 'post',//HTTP请求类型
            timeout: 10000,//超时时间设置为10秒；
            success: function (data) {
                if (data.Success) {
                    $(""#ConnStr"").val(data.ResData.ConnStr);
                    $(""#EncryptConnStr"").val(data.ResData.EncryptConnStr);
                    $(""#EncryptConnStr"").focus();
                }
            },
            error: function (data) {");
            WriteLiteral(@"
                //异常处理；
                alert(data.ErrMsg);
            }
        });
    }

    function ConnStrDecrypt() {
        if ($(""#EncryptConnStr"").val() == """") {
            alert(""加密连接字符串不能为空"");
            $(""#EncryptConnStr"").focus();
            return false;
        }
        var postData = {
            strConn: $(""#EncryptConnStr"").val()
        }

        $.ajax({
            url: '/Tools/DbTools/ConnStrDecrypt',
            data: postData,
            dataType: 'json',//服务器返回json格式数据
            type: 'post',//HTTP请求类型
            timeout: 10000,//超时时间设置为10秒；
            success: function (data) {
                if (data.Success) {
                    $(""#ConnStr"").val(data.ResData.ConnStr);
                    $(""#ConnStr"").focus();
                }
            },
            error: function (data) {
                //异常处理；
                alert(data.ErrMsg);
            }
        });
    }
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
